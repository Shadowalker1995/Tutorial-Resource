WEBVTT

00:05.540 --> 00:12.110
Welcome everyone to this lecture on stemming often when searching text for a certain keyword it helps

00:12.160 --> 00:14.840
if the search returns variations of the word.

00:14.840 --> 00:20.740
For instance searching for the term boat might also return things like boats and boating here.

00:20.750 --> 00:28.280
The stem boat is going to be the stem for words like boat boat or boating and boats which are conveying

00:28.280 --> 00:35.960
the idea related to boat stemming is a somewhat crude method for cataloguing related words.

00:36.070 --> 00:40.830
It essentially just chops off letters from the end until the stem is actually reached.

00:40.840 --> 00:47.230
This works fairly well in most cases but unfortunately English has so many exceptions where a more sophisticated

00:47.230 --> 00:49.170
process is usually required.

00:50.190 --> 00:55.580
In fact it's such a rough process that Spacey doesn't even include a Stemmer.

00:55.620 --> 01:00.510
Instead they opt for the more sophisticated method known as limitation which we're going to cover in

01:00.510 --> 01:06.210
the next lecture but you'll often see stemming in natural language processing discussion.

01:06.390 --> 01:11.520
So it's they do have an understanding of the basics of studying before you move onto amortisation.

01:11.620 --> 01:17.370
There is a link in the note book to a discussion on why the maintainer's is spacey the decide not to

01:17.370 --> 01:22.420
include a summer in favor of limitation in case you're interested in the history of the development

01:22.420 --> 01:23.070
of space.

01:23.240 --> 01:28.760
So you can check out the new book for that link discussion now because of this decision not to include

01:28.760 --> 01:29.880
stemming in space.

01:30.020 --> 01:34.170
We're now going to jump over to using an old Teekay and learn about various DeMars.

01:34.190 --> 01:39.270
In fact we're going to show you both the porter Stemmer and the snowball Stemmer.

01:39.300 --> 01:44.550
So one of the most common and effective stemming tools is Porter's algorithm developed by Martin Porter

01:44.580 --> 01:49.190
in 1980 and the algorithm employs five phases of word reduction.

01:49.440 --> 01:52.900
Each with its own set of mapping rules.

01:52.970 --> 01:57.800
So in the first phase simple suffixed mapping rules are the find such as the following.

01:57.800 --> 02:04.450
So here we have a table with S1 going to s to essentially going from one word to a step.

02:04.460 --> 02:11.630
So you can see here that the ending of one s s e s will get reduced to s s or caresses gets reduced

02:11.630 --> 02:18.830
to caress or I guess it gets reduced to ice so ponys gets reduced to P and I and Tai's gets reduced

02:18.830 --> 02:19.390
to t.

02:19.420 --> 02:28.980
I so from a given set of stemming rules only one rule is applied based off the longest suffix S1 thus

02:28.980 --> 02:32.250
caresses reduces to caress but not to CARES.

02:32.400 --> 02:37.140
That way there's no confusion and mixing up different types of words to the wrong stem.

02:37.140 --> 02:42.420
Now there are some more sophisticated phrases that consider the length and complexity of the word before

02:42.480 --> 02:50.760
applying a rule such as trying to map relational or national to their stem relates and national or agreed

02:50.820 --> 02:53.850
and feed to their other see them agree and feed.

02:54.000 --> 02:58.260
Notice that we're going from e d to e or agonal to 80.

02:58.440 --> 03:03.830
So there's lots of different complex rules that the porter Stemmer is going to implement.

03:05.450 --> 03:10.460
Now snowball is a name of a Stebbing language that was also developed by Martin porter and the algorithm

03:10.460 --> 03:16.580
here is actually sometimes called the English Stemmer or porter to Stemmer and it offers a slight improvement

03:16.610 --> 03:19.820
over the original Porter Stemmer both in logic and speed.

03:19.940 --> 03:25.090
So you can essentially think of it as an improvement over the original Porter Stemmer.

03:25.160 --> 03:30.370
So let's use Python and NLC can actually show how to use the Strummer's with Python.

03:30.440 --> 03:31.650
Jump over to a notebook now.

03:32.590 --> 03:37.940
All right the first thing I'm going to do is import an LTE K for the natural language toolkit and then

03:37.940 --> 03:41.800
from an LTE K that's them.

03:42.020 --> 03:50.640
Porter I'm going to import the porter Stemmer and then I'm going to create an instance of this porter

03:50.660 --> 03:57.340
Stemmer ogic and I'm just using tap to autocomplete there and let's create a list of words.

03:57.340 --> 04:05.440
So I'm going to have run and runner and then I'm going to have also ran.

04:05.470 --> 04:07.900
So notice technically these are all conveying the same idea.

04:07.930 --> 04:09.640
They just had different tenses to them.

04:09.700 --> 04:13.750
So run runner and ran actually one is a noun.

04:13.990 --> 04:18.460
These are verbs but you can see they're both conveying are all three of them are conveying the same

04:18.460 --> 04:26.410
idea of running and we're going to add one more runs and let's add in a few more words like easily.

04:26.680 --> 04:32.050
And we'll also put in fairly just we can get some more examples.

04:32.320 --> 04:38.570
And the way you stem down these words is you just pass them into the stem method of this porter Stemmer.

04:38.830 --> 04:47.560
So the way this works is we can say for word in words we can print out the original word and then I'm

04:47.560 --> 04:51.700
going to concatenate an arrow to show you what it stems to.

04:52.390 --> 04:59.520
And then off our Stemmer object so off piece Stemmer you call them and then pasand that particular word.

04:59.530 --> 05:03.900
So all I'm doing here is I'm going to print out the original word from this list then I get a print

05:03.900 --> 05:09.840
out an arrow with a string and then I'm going to show the stem the version of the word using the porter

05:09.840 --> 05:11.490
Stemmer.

05:11.530 --> 05:18.790
So when I run this I can see that run goes to run run or goes the runner ran goes to ran runs however

05:18.880 --> 05:22.990
does get turned down to runs and that's according to the porter Stemmer rules.

05:23.050 --> 05:27.800
We should chop off the s and now run and runs get treated the same.

05:27.880 --> 05:33.890
What's interesting here is that easily and fairly they get them down to anything of an eye which is

05:33.890 --> 05:35.480
kind of interesting here.

05:35.480 --> 05:44.420
So the Stemmer is actually able to recognize that a runner is a noun not a verb form or a adverb.

05:44.660 --> 05:47.660
And these adverbs are here easily and fairly.

05:47.690 --> 05:53.280
Their stem to the unusual root of easily and I am fairly with an eye as well.

05:53.630 --> 05:59.840
So keep that in mind for use in the porter Stemmer as we mention there's a more sophisticated and slightly

05:59.840 --> 06:02.770
better version of the Stemmer called the snowball Stemmer.

06:02.930 --> 06:07.920
And in order to use it you just say T.K. that's them.

06:08.050 --> 06:17.400
That snowball import and called the snowball Stemmer and then you can create an instance of that Stemmer

06:18.540 --> 06:24.560
by saying snowball Stemmer and this one also requires you to tell you what language it's in.

06:24.570 --> 06:29.820
So we're just going to pass in English as the language parameter and we're going to use the same words

06:29.880 --> 06:31.020
as before.

06:31.080 --> 06:42.150
So now we're going to say for word in words print out the word and then we'll say print out in concatenation

06:42.960 --> 06:44.610
what the snowball Stemmer steps to.

06:44.640 --> 06:53.090
So as Stemmer stem and then word and when you run this you notice that the stemming performs slightly

06:53.090 --> 06:56.710
differently run and runs both gets them down to run.

06:56.870 --> 07:01.880
But now fairly just goes down to fair which is interesting because maybe that performs better for things

07:01.880 --> 07:02.830
like fairness.

07:02.930 --> 07:05.620
So fairly and fairness may both go down to fair.

07:05.630 --> 07:14.330
In fact we can check that by adding in some more words like fairness and if we run this again there's

07:14.340 --> 07:19.830
that fairness goes down to fair fairly goes down to fair leave and I let's try with this snowball Stemmer

07:20.830 --> 07:23.560
and now fairly in fairness both go down to fair.

07:23.590 --> 07:25.010
Isn't the snowball Stemmer.

07:25.170 --> 07:30.110
And typically it's not really a matter of predicting what the stem is going to be the actual stem itself.

07:30.120 --> 07:31.470
It's not super important.

07:31.530 --> 07:36.510
What's important is that you understand the actual process that's happening here.

07:36.540 --> 07:41.130
There is some set of algorithmic rules that these numbers are following to try to reduce down these

07:41.130 --> 07:46.000
words to some sort of root idea or root word.

07:46.120 --> 07:49.710
And I would encourage you to play around with distempers and see how they differ.

07:49.780 --> 07:51.270
Words of your own choice.

07:51.320 --> 07:56.590
So we're going to show one more list here of words kind of as a fun example we're going to type in the

07:56.590 --> 08:08.560
word generous and then run I write in generation and then we're going to write in generously.

08:08.670 --> 08:14.700
And let's also say generate So some of these are similar words and some of them are not so generous

08:14.790 --> 08:18.070
and generation don't really have anything to do if each other.

08:18.120 --> 08:22.590
Yeah technically these kind of the same Latin root but really they're conveying that for ideas to be

08:22.590 --> 08:28.490
generous is not the same thing as actually generating something however generously and generous or conveying

08:28.530 --> 08:34.330
extremely similar ideas and generation and generate are probably also pretty similar ideas.

08:34.530 --> 08:39.630
So let's run that and let's actually copy the snowball Stemmer for this and run the snowball Stemmer

08:39.660 --> 08:45.510
on that list of words and you can see here that generous and generously actually get reduced both to

08:45.570 --> 08:52.380
generous and then Generation and generates both get reduced to Genner rot ending of a T.

08:52.440 --> 08:56.490
So hopefully that gives an idea of how you can use an LTE system words.

08:56.490 --> 09:01.560
And often when you're reading books on natural language processing people like to perform stemming before

09:01.560 --> 09:06.390
they run some sort of analysis in order to try to reduce words to their root.

09:06.390 --> 09:12.450
Now as I mentioned Spacey didn't have stemming because it figures limitation is a much more effective

09:12.450 --> 09:14.340
way of actually reducing these words.

09:14.340 --> 09:19.530
So coming up next we're going to learn about limitation and see why it's probably a more effective way

09:19.890 --> 09:22.260
of reducing these words to their roots.

09:22.260 --> 09:23.280
We'll see at the next lecture.
